import { AfterContentInit, AfterViewInit, ComponentRef, EventEmitter, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { ToastModel } from '../../../interfaces/interfaces';
import { ToastConfig } from '../../../interfaces/interfaces';
import { ToastPosition } from '../../../enums/enums';
import * as i0 from "@angular/core";
export declare class ToastComponent implements OnInit, AfterContentInit, AfterViewInit, OnDestroy {
    private config;
    onClick(event: any): void;
    container: ViewContainerRef;
    toast: ToastModel;
    currentTheme: string;
    control: EventEmitter<ToastModel>;
    private destroy$;
    isVisible: boolean;
    duration: number;
    remainingTime: number;
    timeout: any;
    resumeTime: Date;
    component: ComponentRef<any>;
    svgUrlIsFromSprite: boolean;
    position: ToastPosition;
    bottomRight: ToastPosition;
    bottomLeft: ToastPosition;
    topRight: ToastPosition;
    topLeft: ToastPosition;
    linearGradient: string;
    toastConfig: ToastConfig;
    timebarColor: {
        background: string;
    };
    textColor: string;
    style: string;
    constructor(config: ToastConfig);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    createDynamicToast(): void;
    destroyToast(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    getColors(): void;
    getToastStyle(): void;
    getToastTextColor(): string;
    getTimebarColor(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ToastComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ToastComponent, "toast", never, { "toast": { "alias": "toast"; "required": false; }; "currentTheme": { "alias": "currentTheme"; "required": false; }; }, { "control": "control"; }, never, never, true, never>;
}

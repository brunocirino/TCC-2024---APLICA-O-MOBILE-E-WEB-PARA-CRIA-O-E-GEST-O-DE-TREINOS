import { Component, EventEmitter, HostListener, Inject, Input, Output, ViewChild, ViewContainerRef, } from '@angular/core';
import { Subject } from 'rxjs';
import { TOAST_CONFIG } from '../../../toast.tokens';
import { ToastPosition } from '../../../enums/enums';
import { darkenHexColor } from '../../../utils/utils';
import { NgClass, NgIf, NgStyle } from '@angular/common';
import * as i0 from "@angular/core";
export class ToastComponent {
    config;
    onClick(event) {
        event.stopPropagation();
    }
    container;
    toast;
    currentTheme;
    control = new EventEmitter();
    destroy$ = new Subject();
    isVisible = false;
    duration;
    remainingTime;
    timeout;
    resumeTime;
    component;
    svgUrlIsFromSprite = false;
    position = ToastPosition.BOTTOM_RIGHT;
    bottomRight = ToastPosition.BOTTOM_RIGHT;
    bottomLeft = ToastPosition.BOTTOM_LEFT;
    topRight = ToastPosition.TOP_RIGHT;
    topLeft = ToastPosition.TOP_LEFT;
    linearGradient = '';
    toastConfig;
    timebarColor;
    textColor = '';
    style = '';
    constructor(config) {
        this.config = config;
        this.toastConfig = this.config;
        if (this.toastConfig.position) {
            this.position = this.toastConfig.position;
        }
    }
    ngAfterViewInit() {
        if (this.toast.component) {
            this.createDynamicToast();
        }
    }
    ngOnInit() {
        this.getColors();
        this.svgUrlIsFromSprite = this.toast.icon?.includes('.svg#');
        if (this.toast?.infinite)
            return;
        this.duration = Number(this.toast.duration);
        this.remainingTime = Number(this.toast.duration);
        this.resumeTime = new Date();
        this.timeout = setTimeout(() => {
            this.destroyToast();
        }, this.duration);
    }
    ngAfterContentInit() {
        setTimeout(() => {
            this.isVisible = true;
        }, 10);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    createDynamicToast() {
        this.container.clear();
        setTimeout(() => {
            this.component = this.container.createComponent(this.toast.component);
            this.component.instance.content = this.toast.content;
            if (this.toast?.context) {
                this.component.instance.context = this.toast.context;
            }
        }, 0);
    }
    destroyToast() {
        this.isVisible = false;
        setTimeout(() => {
            this.toast.isVisible = false;
            this.control.emit(this.toast);
        }, 100);
    }
    onMouseEnter() {
        if (this.toast?.infinite)
            return;
        clearTimeout(this.timeout);
        const diff = new Date().getTime() - this.resumeTime.getTime();
        this.remainingTime -= diff;
    }
    onMouseLeave() {
        if (this.toast?.infinite)
            return;
        this.resumeTime = new Date();
        this.timeout = setTimeout(() => {
            this.destroyToast();
        }, this.remainingTime);
    }
    getColors() {
        this.getToastStyle();
        this.getTimebarColor();
    }
    getToastStyle() {
        this.textColor = this.getToastTextColor();
        this.style = `--text-color: ${this.textColor};`;
        const colorHexCode = this.toastConfig?.colors?.[this.toast.type];
        if (!colorHexCode)
            return;
        const darkenedColorHexCode = darkenHexColor(colorHexCode, 0.725);
        this.linearGradient = this.config.colors?.autoGradient
            ? `linear-gradient(45deg, ${darkenedColorHexCode}, ${colorHexCode})`
            : colorHexCode;
        this.style += `background: ${this.linearGradient}`;
    }
    getToastTextColor() {
        const toastTypeText = this.toast.type + 'Text';
        const textColorHexCode = this.config.colors?.[toastTypeText] || '#ffffff';
        return textColorHexCode;
    }
    getTimebarColor() {
        if (!this.toastConfig.colors?.timebar)
            return;
        this.timebarColor = {
            background: this.toastConfig.colors?.timebar,
        };
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: ToastComponent, deps: [{ token: TOAST_CONFIG }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.8", type: ToastComponent, isStandalone: true, selector: "toast", inputs: { toast: "toast", currentTheme: "currentTheme" }, outputs: { control: "control" }, host: { listeners: { "click": "onClick($event)" } }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<div (click)=\"toast.component ? null : destroyToast()\" [class.visible]=\"isVisible\" class=\"toast-container\" [class]=\"toast.type\" [class.dynamic]=\"toast.component ? true : false\" [ngClass]=\"{\n  'right': position === bottomRight || position === topRight,\n  'left': position === bottomLeft || position === topLeft\n}\" (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\" [id]=\"toast._id\" [style]=\"style\">\n  @if (toast.component) {\n    <div class=\"close\">\n      <button class=\"icon\" (click)=\"destroyToast()\"></button>\n    </div>\n  }\n  @if (!toast.infinite) {\n    <div class=\"toast-timer\" [style]=\"'--animation-speed: ' + duration/1000 + 's;'\" [ngStyle]=\"timebarColor\"></div>\n  }\n  <div class=\"toast-group\">\n    <div class=\"toast-group__top\" [ngClass]=\"toast.icon ? 'has-icon' : ''\">\n      @if (toast.icon) {\n        <div class=\"toast-group__icon\">\n          @if (svgUrlIsFromSprite) {\n            <svg>\n              <use [attr.xlink:href]=\"toast.icon\"></use>\n            </svg>\n          } @else {\n            <img [src]=\"toast.icon\">\n          }\n        </div>\n      }\n      <p class=\"toast-title\">{{ toast.title }}</p>\n    </div>\n    <div class=\"toast-group__bottom\">\n      @if (toast.component) {\n        <ng-template #container></ng-template>\n      } @else {\n        <p class=\"toast-content\">{{ toast.content }}</p>\n      }\n    </div>\n  </div>\n</div>", styles: [".toast-container{opacity:0;width:22.5rem;transition:all .3s;border-radius:8px;overflow:hidden;padding:1rem .8rem .8rem 1rem;position:relative}@media screen and (max-width: 768px){.toast-container{width:100%}}.toast-container .close{position:absolute;top:.5rem;right:.5rem;display:flex;justify-content:center;align-items:center}.toast-container .close .icon{width:25px;height:25px;position:relative;display:flex;justify-content:center;align-items:center;border:0;outline:0;background:transparent;transition:all .3s;cursor:pointer}.toast-container .close .icon:hover{opacity:.5}.toast-container .close .icon:before,.toast-container .close .icon:after{content:\"\";position:absolute;width:15px;height:2px;background-color:var(--text-color);transform-origin:center}.toast-container .close .icon:before{transform:rotate(45deg)}.toast-container .close .icon:after{transform:rotate(-45deg)}.toast-container .toast-group{display:flex;flex-direction:column;gap:.5rem}.toast-container .toast-group .toast-group__top{display:flex;align-items:center;gap:.5rem}.toast-container .toast-group .toast-group__top .toast-group__icon{display:flex;justify-content:flex-start;align-items:flex-start}.toast-container .toast-group .toast-group__top p.toast-title{font-size:var(--title-font-size);font-weight:700;text-transform:uppercase;color:var(--text-color);line-height:1.2rem}.toast-container .toast-group .toast-group__bottom p.toast-content{font-size:var(--content-font-size);font-weight:500;color:var(--text-color)}.toast-container .toast-timer{height:4px;position:absolute;top:0;left:0;border-radius:8px;animation:widthAnimation var(--animation-speed) linear;background:linear-gradient(45deg,#2b6bbf,#10425b);animation-iteration-count:1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.toast-container:not(.dynamic){cursor:pointer}.toast-container.right{transform:translate(120%)}.toast-container.left{transform:translate(-120%)}.toast-container.visible{transform:translate(0);opacity:1}.toast-container.visible:hover{opacity:.9}.toast-container.visible:hover .toast-timer{animation-play-state:paused}@keyframes widthAnimation{0%{width:0%}to{width:100%}}.toast-container.danger{background:linear-gradient(45deg,#d10303,#f77676)}.toast-container.success{background:linear-gradient(45deg,#00bd6e,#58d77c)}.toast-container.info{background:linear-gradient(45deg,#5b9dcb,#9cd1f7)}.toast-container.warning{background:linear-gradient(45deg,#f58802,#ffc600)}.toast-container svg{color:var(--text-color);fill:var(--text-color);width:30px;height:30px}.toast-container img{width:30px}\n", "*,*:after,*:before{font-family:var(--font-family);box-sizing:border-box;padding:0;margin:0}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.8", ngImport: i0, type: ToastComponent, decorators: [{
            type: Component,
            args: [{ selector: 'toast', standalone: true, imports: [NgClass, NgIf, NgStyle], template: "<div (click)=\"toast.component ? null : destroyToast()\" [class.visible]=\"isVisible\" class=\"toast-container\" [class]=\"toast.type\" [class.dynamic]=\"toast.component ? true : false\" [ngClass]=\"{\n  'right': position === bottomRight || position === topRight,\n  'left': position === bottomLeft || position === topLeft\n}\" (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\" [id]=\"toast._id\" [style]=\"style\">\n  @if (toast.component) {\n    <div class=\"close\">\n      <button class=\"icon\" (click)=\"destroyToast()\"></button>\n    </div>\n  }\n  @if (!toast.infinite) {\n    <div class=\"toast-timer\" [style]=\"'--animation-speed: ' + duration/1000 + 's;'\" [ngStyle]=\"timebarColor\"></div>\n  }\n  <div class=\"toast-group\">\n    <div class=\"toast-group__top\" [ngClass]=\"toast.icon ? 'has-icon' : ''\">\n      @if (toast.icon) {\n        <div class=\"toast-group__icon\">\n          @if (svgUrlIsFromSprite) {\n            <svg>\n              <use [attr.xlink:href]=\"toast.icon\"></use>\n            </svg>\n          } @else {\n            <img [src]=\"toast.icon\">\n          }\n        </div>\n      }\n      <p class=\"toast-title\">{{ toast.title }}</p>\n    </div>\n    <div class=\"toast-group__bottom\">\n      @if (toast.component) {\n        <ng-template #container></ng-template>\n      } @else {\n        <p class=\"toast-content\">{{ toast.content }}</p>\n      }\n    </div>\n  </div>\n</div>", styles: [".toast-container{opacity:0;width:22.5rem;transition:all .3s;border-radius:8px;overflow:hidden;padding:1rem .8rem .8rem 1rem;position:relative}@media screen and (max-width: 768px){.toast-container{width:100%}}.toast-container .close{position:absolute;top:.5rem;right:.5rem;display:flex;justify-content:center;align-items:center}.toast-container .close .icon{width:25px;height:25px;position:relative;display:flex;justify-content:center;align-items:center;border:0;outline:0;background:transparent;transition:all .3s;cursor:pointer}.toast-container .close .icon:hover{opacity:.5}.toast-container .close .icon:before,.toast-container .close .icon:after{content:\"\";position:absolute;width:15px;height:2px;background-color:var(--text-color);transform-origin:center}.toast-container .close .icon:before{transform:rotate(45deg)}.toast-container .close .icon:after{transform:rotate(-45deg)}.toast-container .toast-group{display:flex;flex-direction:column;gap:.5rem}.toast-container .toast-group .toast-group__top{display:flex;align-items:center;gap:.5rem}.toast-container .toast-group .toast-group__top .toast-group__icon{display:flex;justify-content:flex-start;align-items:flex-start}.toast-container .toast-group .toast-group__top p.toast-title{font-size:var(--title-font-size);font-weight:700;text-transform:uppercase;color:var(--text-color);line-height:1.2rem}.toast-container .toast-group .toast-group__bottom p.toast-content{font-size:var(--content-font-size);font-weight:500;color:var(--text-color)}.toast-container .toast-timer{height:4px;position:absolute;top:0;left:0;border-radius:8px;animation:widthAnimation var(--animation-speed) linear;background:linear-gradient(45deg,#2b6bbf,#10425b);animation-iteration-count:1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.toast-container:not(.dynamic){cursor:pointer}.toast-container.right{transform:translate(120%)}.toast-container.left{transform:translate(-120%)}.toast-container.visible{transform:translate(0);opacity:1}.toast-container.visible:hover{opacity:.9}.toast-container.visible:hover .toast-timer{animation-play-state:paused}@keyframes widthAnimation{0%{width:0%}to{width:100%}}.toast-container.danger{background:linear-gradient(45deg,#d10303,#f77676)}.toast-container.success{background:linear-gradient(45deg,#00bd6e,#58d77c)}.toast-container.info{background:linear-gradient(45deg,#5b9dcb,#9cd1f7)}.toast-container.warning{background:linear-gradient(45deg,#f58802,#ffc600)}.toast-container svg{color:var(--text-color);fill:var(--text-color);width:30px;height:30px}.toast-container img{width:30px}\n", "*,*:after,*:before{font-family:var(--font-family);box-sizing:border-box;padding:0;margin:0}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TOAST_CONFIG]
                }] }], propDecorators: { onClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }], container: [{
                type: ViewChild,
                args: ['container', { read: ViewContainerRef }]
            }], toast: [{
                type: Input
            }], currentTheme: [{
                type: Input
            }], control: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,